/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.Image;
import java.io.File;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;
import javax.swing.table.DefaultTableModel;
import model.Employee;
import model.EmployeeDirectory;

/**
 *
 * @author AMEYA A
 */
public class ViewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SearchJPanel
     */
    EmployeeDirectory empDir;
    public ViewJPanel(EmployeeDirectory empDir) {
        initComponents();
        this.empDir = empDir;
        populateData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmployee = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();
        labelStartDate = new javax.swing.JLabel();
        txtGender = new javax.swing.JTextField();
        labelLevel = new javax.swing.JLabel();
        txtStartDate = new javax.swing.JTextField();
        labelTeamInfo = new javax.swing.JLabel();
        txtLevel = new javax.swing.JTextField();
        labelPosTitle = new javax.swing.JLabel();
        txtTeamInfo = new javax.swing.JTextField();
        labelContactInfo = new javax.swing.JLabel();
        txtPosTitle = new javax.swing.JTextField();
        labelCellNumber = new javax.swing.JLabel();
        txtCellPhone = new javax.swing.JTextField();
        labelEmailAddress = new javax.swing.JLabel();
        txtEmailId = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        txtName = new javax.swing.JTextField();
        labelName = new javax.swing.JLabel();
        labelEmpId = new javax.swing.JLabel();
        labelAge = new javax.swing.JLabel();
        txtEmpId = new javax.swing.JTextField();
        labelGender = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        btnView = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        lblImage = new javax.swing.JLabel();
        btnImage = new javax.swing.JButton();

        tblEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "EmpId", "Age", "Gender", "Start Date", "Level", "Team Info", "Pos Title", "Phone No.", "Email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblEmployee);

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        labelStartDate.setText("START DATE :");

        labelLevel.setText("LEVEL :");

        labelTeamInfo.setText("TEAM INFO :");

        labelPosTitle.setText("POSITION TITLE : ");

        txtTeamInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTeamInfoActionPerformed(evt);
            }
        });

        labelContactInfo.setText("CONTACT INFO -");

        txtPosTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPosTitleActionPerformed(evt);
            }
        });

        labelCellNumber.setText("PHONE NO. :");

        labelEmailAddress.setText("EMAIL :");

        txtEmailId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailIdActionPerformed(evt);
            }
        });

        btnSearch.setText("Search by field");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        labelName.setText("NAME :");

        labelEmpId.setText("EMPLOYEE ID :");

        labelAge.setText("AGE :");

        labelGender.setText("GENDER :");

        btnView.setText("View Entry");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        lblImage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnImage.setText("Update Photo");
        btnImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(labelName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(labelEmpId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(labelAge, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(labelGender, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtGender, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEmpId, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(41, 41, 41)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(labelPosTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(labelStartDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(labelLevel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(labelTeamInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelContactInfo)
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelCellNumber)
                                    .addComponent(labelEmailAddress))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtEmailId, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCellPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtPosTitle, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTeamInfo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(48, 48, 48)
                                .addComponent(lblImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(71, 71, 71)
                                .addComponent(btnImage, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(btnView)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSearch)))
                .addGap(70, 70, 70))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnSearch)
                    .addComponent(btnView)
                    .addComponent(btnUpdate))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelName)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelEmpId)
                            .addComponent(txtEmpId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelAge))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelGender)
                            .addComponent(txtGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelPosTitle)
                            .addComponent(txtPosTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelContactInfo)
                            .addComponent(labelCellNumber)
                            .addComponent(txtCellPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelStartDate)
                            .addComponent(txtStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelLevel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTeamInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelTeamInfo)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnImage)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelEmailAddress)
                    .addComponent(txtEmailId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(217, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblEmployee.getSelectedRow();
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to be deleted");
            return;
        }
        DefaultTableModel model = (DefaultTableModel)tblEmployee.getModel();
        Employee emp = (Employee)model.getValueAt(selectedRowIndex, 0);
        empDir.deleteFromDir(emp);
        JOptionPane.showMessageDialog(this, "Employee Details deleted successfully");
        clearAllTextBoxes();
        populateData();
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtTeamInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTeamInfoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTeamInfoActionPerformed

    private void txtPosTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPosTitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPosTitleActionPerformed

    private void txtEmailIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailIdActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        ArrayList<Employee> empDirTemp = new ArrayList<>();
        String field = "";
        String fieldFlag = "";
        if(!txtName.getText().isEmpty()){
            field = txtName.getText();
            fieldFlag = "NAME";
        }
        else if(!txtEmpId.getText().isEmpty()){
            field = txtEmpId.getText();
            fieldFlag = "EMP_ID";
        }
        else if(!txtAge.getText().isEmpty()){
            if(txtAge.getText().chars().allMatch( Character::isDigit )){
                field = txtAge.getText();
            }
            else{
                field = "0";
            }
            fieldFlag = "AGE";
        }
        else if(!txtGender.getText().isEmpty()){
            field = txtGender.getText();
            fieldFlag = "GENDER";
        }
        else if(!txtStartDate.getText().isEmpty()){
            field = txtStartDate.getText();
            fieldFlag = "START_DATE";
        }
        else if(!txtLevel.getText().isEmpty()){
            field = txtLevel.getText();
            fieldFlag = "LEVEL";
        }
        else if(!txtTeamInfo.getText().isEmpty()){
            field = txtTeamInfo.getText();
            fieldFlag = "TEAM_INFO";
        }
        else if(!txtPosTitle.getText().isEmpty()){
            field = txtPosTitle.getText();
            fieldFlag = "POS_TITLE";
        }
        else if(!txtCellPhone.getText().isEmpty()){
            field = txtCellPhone.getText();
            fieldFlag = "PHONE_NUMBER";
        }
        else if(!txtEmailId.getText().isEmpty()){
            field = txtEmailId.getText();
            fieldFlag = "EMAIL_ID";
        }
        
        empDirTemp = empDir.searchByField(fieldFlag,field);
        DefaultTableModel model = (DefaultTableModel)tblEmployee.getModel();
        model.setRowCount(0);
        for(Employee emp: empDirTemp){
            Object[] row = new Object[10];
            row[0] = emp;
            row[1] = emp.getEmployeeId();
            row[2] = emp.getAge();
            row[3] = emp.getGender();
            row[4] = emp.getStartDate();
            row[5] = emp.getLevel();
            row[6] = emp.getTeamInfo();
            row[7] = emp.getPosTitle();
            row[8] = emp.getPhoneNumber();
            row[9] = emp.getEmailId();
            model.addRow(row);
        }
        clearAllTextBoxes();
    }//GEN-LAST:event_btnSearchActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblEmployee.getSelectedRow();
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to be viewed");
            return;
        }
        DefaultTableModel model = (DefaultTableModel)tblEmployee.getModel();
        Employee emp = (Employee)model.getValueAt(selectedRowIndex, 0);
        txtName.setText(emp.getName());
        txtEmpId.setText(emp.getEmployeeId());
        txtAge.setText(String.valueOf(emp.getAge()));
        txtGender.setText(emp.getGender());
        txtStartDate.setText(emp.getStartDate());
        txtLevel.setText(emp.getLevel());
        txtTeamInfo.setText(emp.getTeamInfo());
        txtPosTitle.setText(emp.getPosTitle());
        txtCellPhone.setText(emp.getPhoneNumber());
        txtEmailId.setText(emp.getEmailId());
        lblImage.setIcon(emp.getPhoto());
        
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblEmployee.getSelectedRow();
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to be updated");
            return;
        }
        DefaultTableModel model = (DefaultTableModel)tblEmployee.getModel();
        Employee emp = (Employee)model.getValueAt(selectedRowIndex, 0);

        Employee empUpdated = empDir.addToEmpDir();

        Boolean allPass = true;
        if(txtName.getText().isEmpty()&&txtEmpId.getText().isEmpty()&&txtAge.getText().isEmpty()
                &&txtGender.getText().isEmpty()&&txtStartDate.getText().isEmpty()&&txtLevel.getText().isEmpty()
                &&txtTeamInfo.getText().isEmpty()&&txtPosTitle.getText().isEmpty()&&txtCellPhone.getText().isEmpty()
                &&txtEmailId.getText().isEmpty()){
            JOptionPane.showMessageDialog(this,"All fields cannot be empty");
            empDir.deleteFromDir(emp);
        }else{
        if(txtCellPhone.getText().isEmpty()){
            empUpdated.setPhoneNumber(emp.getPhoneNumber());}
        else if(txtCellPhone.getText().matches("\\d{10}")){           

            empUpdated.setPhoneNumber(txtCellPhone.getText());
        }       
        else{
            JOptionPane.showMessageDialog(this,"Enter a valid 10 digit phone number");
            allPass = false;
        }
            
        
        if(txtEmailId.getText().isEmpty()){
            empUpdated.setEmailId(emp.getEmailId());   
        }
        else if(txtEmailId.getText().matches("^(.+)@(.+)$")){
            empUpdated.setEmailId(txtEmailId.getText());
        }else{
            JOptionPane.showMessageDialog(this,"Enter a valid email id");
            allPass = false;
        }
        
        if(txtStartDate.getText().isEmpty()){
            empUpdated.setStartDate(emp.getStartDate());   
            }
        //else if(txtStartDate.getText().matches("^(0[1-9]|[12][0-9]|3[01])[- /.](0[1-9]|1[012])[- /.](19|20)\\d\\d$")){
        else if(txtStartDate.getText().matches("^(?:(?:(?:0?[13578]|1[02]|(?:Jan|Mar|May|Jul|Aug|Oct|Dec))(\\/|-|\\.)31)\\1|(?:(?:0?[1,3-9]|1[0-2]|(?:Jan|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec))(\\/|-|\\.)(?:29|30)\\2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:(?:0?2|(?:Feb))(\\/|-|\\.)(?:29)\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:(?:0?[1-9]|(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep))|(?:1[0-2]|(?:Oct|Nov|Dec)))(\\/|-|\\.)(?:0?[1-9]|1\\d|2[0-8])\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$$")){
        empUpdated.setStartDate(txtStartDate.getText());
        }else{
            JOptionPane.showMessageDialog(this,"Enter a valid date in format dd/mm/yyyy");
            allPass=false;   
        }
            
        
        if(txtAge.getText().isEmpty()){
            empUpdated.setAge((emp.getAge()));   
            }
        else if(txtAge.getText().chars().allMatch( Character::isDigit )){
            if((15<Integer.valueOf(txtAge.getText())) && (Integer.valueOf(txtAge.getText())<101)){
               empUpdated.setAge(Integer.valueOf(txtAge.getText())); 
            }
            else{
                JOptionPane.showMessageDialog(this,"Enter a valid age (Working age between 16 to 100)");
                allPass=false;
            }
        }else{
            JOptionPane.showMessageDialog(this,"Enter a valid age");
            allPass=false;   
        }
        if(txtGender.getText().isEmpty()){
                empUpdated.setGender(emp.getGender());   
            }
        else if((txtGender.getText().equals("male"))||(txtGender.getText().equals("female"))||(txtGender.getText().equals("other"))){
            empUpdated.setGender(txtGender.getText());
        }
        else{
            JOptionPane.showMessageDialog(this,"Enter a valid Gender from - (male/female/other)");
            allPass = false;
        }
       
        if(allPass==true){

            if(txtName.getText().isEmpty()){
                empUpdated.setName(emp.getName());   
            }else{
                empUpdated.setName(txtName.getText());
            }

            if(txtEmpId.getText().isEmpty()){
                empUpdated.setEmployeeId(emp.getEmployeeId());   
            }else{
                empUpdated.setEmployeeId(txtEmpId.getText());
            }
            
            if(txtLevel.getText().isEmpty()){
                empUpdated.setLevel(emp.getLevel());   
            }else{
                empUpdated.setLevel(txtLevel.getText());
            }

            if(txtTeamInfo.getText().isEmpty()){
                empUpdated.setTeamInfo(emp.getTeamInfo());   
            }else{
                empUpdated.setTeamInfo(txtTeamInfo.getText());
            }

            if(txtPosTitle.getText().isEmpty()){
                empUpdated.setPosTitle(emp.getPosTitle());   
            }else{
                empUpdated.setPosTitle(txtPosTitle.getText());
            }
            
            if(lblImage.getIcon()==null){
                empUpdated.setPhoto(emp.getPhoto());   
            }
            else{
                empUpdated.setPhoto(lblImage.getIcon());
            }
            empDir.deleteFromDir(emp);
            JOptionPane.showMessageDialog(this, "Employee Details updated successfully");
            clearAllTextBoxes();
            populateData();
            
        }
        else{
            empDir.deleteFromDir(empUpdated);
        }
        
    }  

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImageActionPerformed
        // TODO add your handling code here:
        JFileChooser img = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        //img.setCurrentDirectory(new File(System.getProperty("user.home")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.images","jpg","gif","png");
        img.addChoosableFileFilter(filter);
        int result = img.showSaveDialog(null);
        if(result == JFileChooser.APPROVE_OPTION){
            File selectedFile = img.getSelectedFile();
            String path = selectedFile.getAbsolutePath();
            System.out.println(path);
            ImageIcon imgIcon = new ImageIcon(path);
            
            Image image = imgIcon.getImage();
            Image scaledImage = image.getScaledInstance(120, 120,  java.awt.Image.SCALE_SMOOTH);
            ImageIcon scaledImageIcon = new ImageIcon(scaledImage);

            lblImage.setIcon(scaledImageIcon);
            System.out.println(lblImage.getIcon());
            
            
        }
        else if (result==JFileChooser.CANCEL_OPTION){
            System.out.println("No File Selected");
        }
    }//GEN-LAST:event_btnImageActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnImage;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelAge;
    private javax.swing.JLabel labelCellNumber;
    private javax.swing.JLabel labelContactInfo;
    private javax.swing.JLabel labelEmailAddress;
    private javax.swing.JLabel labelEmpId;
    private javax.swing.JLabel labelGender;
    private javax.swing.JLabel labelLevel;
    private javax.swing.JLabel labelName;
    private javax.swing.JLabel labelPosTitle;
    private javax.swing.JLabel labelStartDate;
    private javax.swing.JLabel labelTeamInfo;
    private javax.swing.JLabel lblImage;
    private javax.swing.JTable tblEmployee;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtCellPhone;
    private javax.swing.JTextField txtEmailId;
    private javax.swing.JTextField txtEmpId;
    private javax.swing.JTextField txtGender;
    private javax.swing.JTextField txtLevel;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPosTitle;
    private javax.swing.JTextField txtStartDate;
    private javax.swing.JTextField txtTeamInfo;
    // End of variables declaration//GEN-END:variables

    private void populateData() {
        DefaultTableModel model = (DefaultTableModel)tblEmployee.getModel();
        model.setRowCount(0);
        for(Employee emp: empDir.getEmpDir()){
            Object[] row = new Object[10];
            row[0] = emp;
            row[1] = emp.getEmployeeId();
            row[2] = emp.getAge();
            row[3] = emp.getGender();
            row[4] = emp.getStartDate();
            row[5] = emp.getLevel();
            row[6] = emp.getTeamInfo();
            row[7] = emp.getPosTitle();
            row[8] = emp.getPhoneNumber();
            row[9] = emp.getEmailId();

            model.addRow(row);
        }
    }
    
    private void clearAllTextBoxes(){
        txtName.setText("");
        txtEmpId.setText("");
        txtAge.setText("");
        txtGender.setText("");
        txtStartDate.setText("");
        txtLevel.setText("");
        txtTeamInfo.setText("");
        txtPosTitle.setText("");
        txtCellPhone.setText("");
        txtEmailId.setText("");
        lblImage.setIcon(null);
    }
    
    
}
